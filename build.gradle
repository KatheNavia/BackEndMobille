plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
}

group = 'co.edu.uniajc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'com.auth0:java-jwt:3.19.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
	testImplementation group: 'org.junit.jupiter', name:'junit-jupiter-api', version: '5.8.2'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'

	testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
}

jacoco{
	toolVersion="0.8.7"
	reportsDirectory=layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport{
	reports{
		xml.required=false
		csv.required=false
		html.outputLocation= layout.buildDirectory.dir('jacocoHtml')
	}

	afterEvaluate{
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ["co/edu/uniajc/vacunacion/model/*",
						 "co/edu/uniajc/vacunacion/VacunacionApplication.class"])
		}))
	}

}

jacocoTestCoverageVerification{
	violationRules{
		rule{
			limit{
				minimum= 0.5
			}
		}
		rule{
			enabled=false
			element='CLASS'
			includes=['org.gradle.*']

			limit{
				counter='LINE'
				value='TOTALCOUNT'
				maximum=0.3
			}
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
